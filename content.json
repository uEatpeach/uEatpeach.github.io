{"meta":{"title":"星星之火","subtitle":"wkj的博客","description":"相信奇迹的人本身就是奇迹","author":"Wen Kang Jian","url":"https://ueatpeach.github.io","root":"/"},"pages":[],"posts":[{"title":"在使用 MyBatis Plus 进行开发时，由于自动生成的 ID 过长，重新设置数据库自增长ID的起始值","slug":"MyBatis-Plus-bug-first","date":"2023-08-04T07:57:39.000Z","updated":"2023-08-04T09:40:46.777Z","comments":true,"path":"2023/08/04/MyBatis-Plus-bug-first/","link":"","permalink":"https://ueatpeach.github.io/2023/08/04/MyBatis-Plus-bug-first/","excerpt":"","text":"解决 MyBatis Plus 自动生成的过长 ID 问题并重新设置数据库自增长ID的起始值问题描述在使用 MyBatis Plus 进行开发时，自动生成的 ID 过长可能导致数据库性能下降、索引冗长等问题。因此，需要解决这个问题。 在某种情况下，当使用 MyBatis Plus 自动生成的 ID 过长时，可能导致其他接口无法按照 int 类型查询数据，因为数据库中设计为 bigint 类型，纯了 19 位数字。为解决这个问题，一种简单的方法是使用数据库的自增长主键来替代 MyBatis Plus 自动生成的 ID，避免生成过长的 ID。 另外，当在 MySQL 数据库中使用了自增长类型的 ID，并删除了部分数据后，可能需要重新设置自增长 ID 的起始值。以下是两种重置自增长 ID 的方法的详细步骤。 方法1：使用 ALTER TABLE 命令首先确认要重置自增长 ID 的表名，例如表名为 base_user。 执行以下 SQL 语句获取表中的最大 ID 值：1234SELECT MAX(id) FROM base_user;将最大 ID 值加1，并执行以下 SQL 语句重置自增长 ID，假设最大 ID 值为 2000：ALTER TABLE base_user AUTO_INCREMENT = 2001;这样，以后插入数据时，自增长 ID 将从 2001 开始递增。 方法2：使用 TRUNCATE TABLE 命令首先确认要重置自增长 ID 的表名，例如表名为 base_user。 123执行以下 SQL 语句来清空表并重置自增长 ID（注意：该命令会删除表中的所有数据，请确保已备份重要数据）：TRUNCATE TABLE base_user;TRUNCATE TABLE 命令将删除表中的所有数据，并重新创建表，自动将自增长 ID 重置为 1 开始。 注意：在生产环境中，请谨慎使用重置自增长 ID 的方法，以确保数据的完整性和一致性。 使用数据库自增长主键的解决方案为了解决 MyBatis Plus 自动生成的过长 ID 问题，可以使用数据库的自增长主键来替代 MyBatis Plus 自动生成的 ID，从而生成相对较短的 ID。 解决方案步骤在实体类的 ID 字段上添加 @TableId(type &#x3D; IdType.AUTO) 注解，指定使用数据库的自增长主键。示例代码如下： 123456789import com.baomidou.mybatisplus.annotation.IdType;import com.baomidou.mybatisplus.annotation.TableId;public class YourEntity &#123; @TableId(type = IdType.AUTO) private Long id; // 其他字段&#125; 在数据库中创建相应的表，并将 ID 字段设置为自增长（一般使用 AUTO_INCREMENT 或类似方法实现）。示例 SQL 代码如下： 1234CREATE TABLE your_table ( id bigint AUTO_INCREMENT PRIMARY KEY, -- 其他字段); 这样，MyBatis Plus 将使用数据库自增长主键来生成 ID，避免了生成过长的 ID。 请注意，这种简化的解决方案依赖于数据库的自增长主键功能，所以请确保数据库表的设置是支持自增长主键的。 总结通过使用数据库的自增长主键来替代 MyBatis Plus 自动生成的过长 ID，可以提高数据库性能和索引效率。这是一个简单而有效的解决方案。 希望这个文档对你有帮助！","categories":[],"tags":[]},{"title":"如何学习Java","slug":"my-first-blog","date":"2023-07-17T15:35:17.000Z","updated":"2023-08-04T08:09:40.008Z","comments":true,"path":"2023/07/17/my-first-blog/","link":"","permalink":"https://ueatpeach.github.io/2023/07/17/my-first-blog/","excerpt":"介绍Java 是一种广泛应用于开发各种类型应用程序的编程语言。它的可移植性、面向对象的特性以及强大的生态系统使其成为许多开发者选择的首选语言。本文将为您提供一个步骤性的指南，以帮助您开始学习 Java 编程。","text":"介绍Java 是一种广泛应用于开发各种类型应用程序的编程语言。它的可移植性、面向对象的特性以及强大的生态系统使其成为许多开发者选择的首选语言。本文将为您提供一个步骤性的指南，以帮助您开始学习 Java 编程。 准备工作在开始学习 Java 之前，您需要进行一些准备工作： 安装 Java 开发工具包（JDK）并进行配置。 在您的计算机上选择并设置 Java 集成开发环境（IDE）。 基础知识在学习任何编程语言之前，了解其基础知识是至关重要的。以下是您需要掌握的一些 Java 基础知识： Java 语言的发展历史和用途。 Java 的基本语法和命名规范。 如何编写和运行一个简单的 Java 程序。 数据类型与变量Java 提供了多种数据类型，用于存储不同类型的值。了解这些数据类型并熟练使用变量是编程的基础： Java 的基本数据类型，如整数、浮点数、字符和布尔值。 如何声明和初始化变量，以及变量的作用域。 运算符与表达式了解 Java 运算符和表达式的使用可以进行各种数学和逻辑操作。以下是一些关键点： 常用的算术、赋值、比较和逻辑运算符的用法。 如何使用括号来改变运算顺序。 字符串的连接和比较。 控制流控制流语句允许您根据条件执行不同的代码块，或者多次执行相同的代码。以下是常用的控制流语句： 条件语句（if-else 和 switch）的使用。 循环语句（for、while 和 do-while）的使用。 对象与类Java 是一种面向对象的编程语言，它提供了创建和使用对象的机制。以下是与对象和类相关的重要概念： 什么是类和对象，以及如何定义它们。 如何使用类的属性和方法。 如何实例化对象并访问其属性和方法。 面向对象编程面向对象编程（OOP）是 Java 的核心概念之一。了解面向对象编程的原则和实践对于开发复杂的应用程序至关重要： 封装、继承和多态的概念与用法。 如何设计良好的类和对象之间的关系。 异常处理在编程过程中，错误和异常是不可避免的。Java 提供了异常处理机制，以帮助您捕获和处理这些异常： 异常的分类，包括检查型异常和非检查型异常。 如何使用 try-catch 块来处理异常。 如何抛出自定义异常。 核心 APIJava 提供了丰富的核心类库，其中包括许多常用的类和方法。以下是一些重要的核心 API： 字符串操作和正则表达式的使用。 数字和日期操作。 文件读写和处理。 进阶学习资源学习 Java 是一个持续的过程，以下是一些优秀的学习资源，可以帮助您深入学习 Java 编程： 书籍推荐：列出一些著名的 Java 编程书籍。 在线课程：提供一些免费或付费的在线 Java 编程课程。 社区和开发者论坛：推荐一些活跃的 Java 开发者社区，其中可以获得解答和交流。 结论本文回顾了从学习 Java 的准备工作到掌握核心概念的过程。强调持续实践和深入学习的重要性，鼓励读者在编程旅程中不断探索和创新。 希望这篇文章能为您提供一个良好的起点，让您能够更具信心地学习和应用 Java 编程技能。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2023-07-17T09:49:35.769Z","updated":"2023-07-18T02:09:01.030Z","comments":true,"path":"2023/07/17/hello-world/","link":"","permalink":"https://ueatpeach.github.io/2023/07/17/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}